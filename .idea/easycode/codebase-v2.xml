<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/src/androidTest/java/com/example/vidbinge/ExampleInstrumentedTest.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/data/coil/TMDbImageSize.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/data/models/movie/Movie.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/data/models/movie/MovieDetails.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/data/models/tvshow/TvShow.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/data/models/Genre.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/data/models/PillChoices.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/data/models/RelativeLuma.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/data/repo/MovieRepository.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/data/repo/TVRepository.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/domain/mapper/Mapper.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/domain/mapper/MovieDetailsMapper.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/domain/mapper/MovieMapper.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/domain/mapper/TvMapper.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/exceptions/NoInternetException.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/ext/ColorExtensions.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/ext/DrawableExtensions.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/ext/ListExtensions.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/ext/ModifierExtensions.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/network/client/MovieRetrofitClient.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/network/client/TVRetrofitClient.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/network/connectivity/ConnectivityObserver.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/network/connectivity/NetworkConnectivityObserver.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/network/dtos/ListResponse.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/network/dtos/MovieDto.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/network/dtos/TVDto.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/network/service/MovieService.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/network/service/TVService.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/network/HeadersInterceptor.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/network/NetworkConnectivityInterceptor.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/network/RetrofitClient.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/ui/components/ErrorScreen.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/ui/components/LoadingObject.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/ui/components/PillBar.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/ui/components/SearchBar.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/ui/navtypes/MovieType.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/ui/BaseMvi.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/ui/BaseViewModel.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/Constants.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/common/Secrets.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/details/data/dto/CastDTO.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/details/data/dto/MovieCreditsDTO.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/details/data/dto/MovieDetailsDTO.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/details/data/model/Cast.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/details/domain/mapper/CastMapper.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/details/ui/intents/MovieDetailsScreenIntent.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/details/ui/screens/MovieDetailsScreen.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/details/ui/states/MovieDetailsScreenState.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/details/ui/viewmodels/MovieDetailsViewModel.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/home/ui/components/MovieCarousel.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/home/ui/components/MoviePortraitCard.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/home/ui/components/TVCarousel.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/home/ui/components/TVPortraitCard.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/home/ui/effects/HomeScreenEffect.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/home/ui/intents/HomeScreenIntent.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/home/ui/screens/HomeScreen.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/home/ui/states/HomeScreenState.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/home/ui/viewmodels/HomeScreenViewModel.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/ui/theme/old/Color.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/ui/theme/old/Theme.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/ui/theme/old/Type.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/ui/theme/Color.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/ui/theme/Theme.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/ui/theme/Type.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/MainActivity.kt;D:/Work/Programming/VidBinge/app/src/main/java/com/example/vidbinge/VidBingeApplication.kt;D:/Work/Programming/VidBinge/app/src/test/java/com/example/vidbinge/ExampleUnitTest.kt;D:/Work/Programming/VidBinge/app/build.gradle.kts;D:/Work/Programming/VidBinge/app/test.kt;D:/Work/Programming/VidBinge/build.gradle.kts;D:/Work/Programming/VidBinge/settings.gradle.kts" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;D:/Work/Programming/VidBinge&quot;:&quot;{\&quot;/app/src/main/java/com/example/vidbinge/details/ui/states/MovieDetailsScreenState.kt\&quot;:\&quot;This file defines a data class `MovieDetailsScreenState` that represents the state of the movie details screen in the `VidBinge` application.\\n\\n`MovieDetailsScreenState`: A data class that holds the state of the movie details screen, including the cast list, whether the movie is added to the watchlist, loading states, error messages, extra movie details, and the ambient screen color.\\n\\nThis file does not contain any functions. It serves as a data model for the state of the movie details screen in the `VidBinge` application.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/home/ui/viewmodels/HomeScreenViewModel.kt\&quot;:\&quot;This file contains a single class and several functions:\\n\\n`HomeScreenViewModel`: A ViewModel class that manages the state and effects for the home screen of the VidBinge app.\\n\\n`observeNetworkConnectivity()`: A function that observes the network connectivity status and updates the state accordingly.\\n\\n`populateHomeScreen()`: A function that combines the data from the MovieRepository and TVRepository to populate the home screen.\\n\\n`getHomeScreenTV()`: A function that retrieves the necessary TV data for the home screen.\\n\\n`onPillPressed(selectedPill: PillChoices)`: A function that updates the state when a pill is pressed on the home screen.\\n\\n`getHomeScreenMovies()`: A function that retrieves the necessary movie data for the home screen.\\n\\n`initialState()`: A function that returns the initial state for the HomeScreenViewModel.\\n\\n`handleIntent(intent: HomeScreenIntent)`: A function that handles the different intents for the HomeScreenViewModel.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/ui/components/LoadingObject.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`LoadingObject`: A Composable function that displays a centered circular progress indicator, indicating that some content is currently loading.\\n\\nThis file is a Compose UI component that provides a simple loading indicator to be used in a Compose-based Android application.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/home/ui/components/TVPortraitCard.kt\&quot;:\&quot;This file contains Composable functions for creating a TV portrait card UI component in a Jetpack Compose-based Android application.\\n\\n`RatingPill`: A composable function that displays a rating pill with a star icon and the rating value.\\n\\n`TitleBackDrop`: A composable function that displays a title backdrop with the provided text.\\n\\n`TVPortraitCard`: A composable function that creates a TV portrait card UI component, including an image, a rating pill, and a title backdrop.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/home/ui/states/HomeScreenState.kt\&quot;:\&quot;This file defines the state for the home screen of the VidBinge application. It contains the following classes:\\n\\n`HomeScreenState`: Represents the overall state of the home screen, including loading status, error messages, and the data for movies and TV shows.\\n\\n`HomeScreenMovies`: Holds the lists of movies for different categories (now playing, popular, top-rated, and upcoming).\\n\\n`HomeScreenTV`: Holds the lists of TV shows for different categories (now airing, popular, and top-rated).\\n\\nThis file does not contain any functions. It serves as a data model for the home screen state, which can be used in the application\\u0027s UI and business logic.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/ext/ModifierExtensions.kt\&quot;:\&quot;This file contains two Composable functions:\\n\\n`noRippleClickable`: This function creates a clickable Modifier that does not have a ripple effect when clicked.\\n\\n`debugBorder`: This function creates a Modifier that adds a colored border around the UI element, which can be useful for debugging layout issues.\\n\\nThe file also contains some utility extension functions for Android Compose UI development.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/Color.kt\&quot;:\&quot;This file does not contain any classes or functions. It is a Kotlin file that defines a set of color values for a material design-based UI theme. The file includes various color palettes for light, medium, and high contrast modes, covering primary, secondary, tertiary, error, background, surface, and other color categories. The purpose of this file is to provide a consistent and visually appealing color scheme for the application\\u0027s user interface.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/data/repo/TVRepository.kt\&quot;:\&quot;This file contains a single class and three functions:\\n\\n`TVRepository`: A repository class that provides access to TV show data from a remote API.\\n\\n`getNowAiringShows()`: Retrieves a list of the 6 most recently airing TV shows.\\n`getPopularShows()`: Retrieves a list of the most popular TV shows.\\n`getTopRatedShows()`: Retrieves a list of the highest-rated TV shows.\\n\\nThe purpose of this file is to encapsulate the logic for fetching TV show data from a remote API and mapping the response data to a domain model. The repository class provides a set of functions that can be used to retrieve different types of TV show data, such as currently airing shows, popular shows, and top-rated shows.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/network/dtos/ListResponse.kt\&quot;:\&quot;This file defines a data class `ListResponse` that represents a response from an API that returns a list of items. The class has the following properties:\\n\\n`ListResponse\\u003cT\\u003e`: A data class that represents a response from an API that returns a list of items, including the page number, the list of results, the total number of pages, and the total number of results.\\n\\n`page`: The current page number of the response.\\n`results`: The list of items returned in the response.\\n`totalPages`: The total number of pages available.\\n`totalResults`: The total number of results available.\\n\\nThis file does not contain any functions, but rather defines a data class to represent a common response structure for list-based API responses.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/data/repo/MovieRepository.kt\&quot;:\&quot;This file is a Kotlin class that serves as a repository for movie-related data. It interacts with a movie API to fetch and manage various movie-related information, such as now playing movies, popular movies, top-rated movies, upcoming movies, movie details, and movie credits.\\n\\n`MovieRepository`: A class that serves as a repository for movie-related data, providing methods to fetch and manage various movie-related information.\\n\\n`getNowPlayingMovies()`: Fetches a list of the currently playing movies, returning a `Flow` of `Movie` objects.\\n\\n`getPopularMovies()`: Fetches a list of the most popular movies, returning a `Flow` of `Movie` objects.\\n\\n`getTopRatedMovies()`: Fetches a list of the top-rated movies, returning a `Flow` of `Movie` objects.\\n\\n`getUpcomingMovies()`: Fetches a list of upcoming movies, returning a `Flow` of `Movie` objects.\\n\\n`getMovieDetails(movieId: Int)`: Fetches the details of a specific movie, returning a `Flow` of `MovieDetails` object.\\n\\n`getMovieCredits(movieId: Int)`: Fetches the cast information for a specific movie, returning a `Flow` of `Cast` objects.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/network/connectivity/NetworkConnectivityObserver.kt\&quot;:\&quot;This file contains a single class and several functions:\\n\\n`NetworkConnectivityObserver`: A class that observes the network connectivity status of the device and emits a `ConnectivityStatus` flow.\\n\\n`observe()`: A function that registers a `ConnectivityManager.NetworkCallback` to observe network connectivity changes and emits the appropriate `ConnectivityStatus` values through a `callbackFlow`.\\n\\nThis file provides a way to observe the network connectivity status of an Android device using Kotlin coroutines and the `ConnectivityManager` API.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/exceptions/NoInternetException.kt\&quot;:\&quot;This file defines a custom exception class `NoInternetException` that extends the `IOException` class. It is used to represent a situation where there is no internet connection available.\\n\\n`NoInternetException`: A custom exception class that represents a lack of internet connection.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/PillChoices.kt\&quot;:\&quot;This file defines an `enum` class called `PillChoices` which represents different types of content choices that can be made in the \\\&quot;Vidbinge\\\&quot; application.\\n\\n`PillChoices`: An enum class that represents different types of content choices, such as \\\&quot;ALL\\\&quot;, \\\&quot;TV\\\&quot;, and \\\&quot;MOVIES\\\&quot;.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/domain/mapper/Mapper.kt\&quot;:\&quot;This file defines an interface `Mapper` that provides a contract for mapping between a model and a data transfer object (DTO).\\n\\n`Mapper`: An interface that defines the contract for mapping between a model and a DTO.\\n\\n`mapToDTO`: A function that maps a model to a DTO.\\n`mapToModel`: A function that maps a DTO to a model.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/Secrets.kt\&quot;:\&quot;This file does not contain any classes or functions. It is a Kotlin object named `Secrets` that defines a constant `TOKEN` with a value of a long string, which appears to be a JSON Web Token (JWT) used for authentication or authorization purposes in the `com.example.vidbinge.common` package.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/network/dtos/TVDto.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`TVDto`: A data class that represents a TV show, containing information such as its ID, overview, name, adult status, backdrop path, genre IDs, origin countries, original language, original name, popularity, poster path, first air date, vote average, and vote count.\\n\\nThis file does not contain any functions. It serves as a data transfer object (DTO) for representing TV show data in the application\\u0027s network communication.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/details/domain/mapper/CastMapper.kt\&quot;:\&quot;`CastMapper`: A class that maps between `Cast` model and `CastDTO` data transfer object.\\n\\n`mapToDTo`: A function that maps a `Cast` model to a `CastDTO` object.\\n\\n`mapToModel`: A function that maps a `CastDTO` object to a `Cast` model.\\n\\nThis file contains a mapper class that is responsible for converting between the `Cast` model and the `CastDTO` data transfer object. The mapper provides methods to map the data in both directions, from the model to the DTO and from the DTO to the model.\&quot;,\&quot;/settings.gradle.kts\&quot;:\&quot;This file is a Gradle configuration file for an Android project named \\\&quot;VidBinge\\\&quot;. It sets up the plugin management and dependency resolution for the project. There are no classes or functions defined in this file. Instead, it configures the following:\\n\\n`pluginManagement`: Specifies the repositories to be used for resolving Gradle plugins, including Google, Maven Central, and the Gradle Plugin Portal.\\n\\n`dependencyResolutionManagement`: Configures the repositories to be used for resolving project dependencies, including Google and Maven Central. It also sets the repositories mode to `FAIL_ON_PROJECT_REPOS`, which means that the build will fail if any project-specific repositories are defined.\\n\\n`rootProject.name`: Sets the name of the root project to \\\&quot;VidBinge\\\&quot;.\\n\\n`include(\\\&quot;:app\\\&quot;)`: Includes the \\\&quot;:app\\\&quot; module in the project.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/network/client/MovieRetrofitClient.kt\&quot;:\&quot;`MovieRetrofitClient`: A class that provides a Retrofit client for the MovieService API.\\n\\n`buildRetrofitClient()`: A function that builds and returns a Retrofit client for the MovieService API, with the necessary configuration (base URL, converter factories, and HTTP client).\\n\\n`createHttpClient()`: This file does not contain a function with this name. The file appears to be a Kotlin class that sets up a Retrofit client for the MovieService API, which is a common network service used in the VidBinge application.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/network/connectivity/ConnectivityObserver.kt\&quot;:\&quot;This file defines an interface called `ConnectivityObserver` and an enum called `ConnectivityStatus`. The file does not contain any classes or functions, but rather defines a contract for observing the connectivity status of a device.\\n\\n`ConnectivityObserver`: An interface that provides a way to observe the connectivity status of a device.\\n\\n`observe()`: A function that returns a `Flow` of `ConnectivityStatus` values, which represent the current connectivity status of the device.\\n\\n`ConnectivityStatus`: An enum that represents the possible connectivity statuses of a device, including `AVAILABLE`, `UNAVAILABLE`, and `LOST`.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/details/data/model/Cast.kt\&quot;:\&quot;`Cast`: A data class that represents a cast member in a movie, containing information such as their name, character, and profile picture.\\n\\n`profileFullPath`: A function that generates the full URL for a cast member\\u0027s profile picture based on the provided image size.\\n\\n`mockList`: A companion object that provides a list of mock `Cast` instances for testing or demonstration purposes.\\n\\nThis file defines a `Cast` data class that represents a cast member in a movie, including their name, character, and profile picture. It also provides a function to generate the full URL for a cast member\\u0027s profile picture and a mock list of `Cast` instances for testing or demonstration purposes.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/network/client/TVRetrofitClient.kt\&quot;:\&quot;`TVRetrofitClient`: A class that provides a Retrofit client for the TV service.\\n\\n`buildRetrofitClient()`: A function that builds and returns a Retrofit client for the TV service, with the base URL, converter factories, and HTTP client configured.\\n\\nThis file defines a `TVRetrofitClient` class that extends the `RetrofitClient` class and provides a Retrofit client for the TV service. The `buildRetrofitClient()` function is responsible for configuring the Retrofit client with the necessary settings, such as the base URL, converter factories, and HTTP client.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/details/ui/viewmodels/MovieDetailsViewModel.kt\&quot;:\&quot;This file contains a single class and several functions:\\n\\n`MovieDetailsViewModel`: A ViewModel class that handles the logic for the movie details screen, including loading movie details and cast information, observing network connectivity, and updating the UI state.\\n\\n`observeNetworkConnectivity()`: A function that observes the network connectivity status and updates the UI state accordingly.\\n\\n`getMovieDetails()`: A function that retrieves the movie details from the repository and updates the UI state.\\n\\n`getMovieCast()`: A function that retrieves the movie cast information from the repository and updates the UI state.\\n\\n`onImageLoadedForAmbientColor(drawable: Drawable)`: A function that extracts the dominant color from a loaded image and updates the UI state with the ambient screen color.\\n\\n`initialState()`: A function that returns the initial state of the movie details screen.\\n\\n`handleIntent(intent: MovieDetailsScreenIntent)`: A function that handles the movie details screen intents and updates the UI state accordingly.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/network/NetworkConnectivityInterceptor.kt\&quot;:\&quot;This file contains a single class and two functions:\\n\\n`NetworkConnectivityInterceptor`: This class is an `Interceptor` that checks the device\\u0027s network connectivity before allowing a network request to proceed.\\n\\n`intercept`: This function checks if the device is connected to the internet, and if not, it throws a `NoInternetException`. If the device is connected, it proceeds with the network request.\\n\\n`isConnected`: This function checks the device\\u0027s network capabilities to determine if it has a validated network connection.\\n\\nThis file is responsible for handling network connectivity checks in the application, ensuring that network requests are only made when the device has a valid internet connection.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/ui/BaseMvi.kt\&quot;:\&quot;This file defines three interfaces: `State`, `SideEffect`, and `Intent`. These interfaces are likely used in a state management system or architecture, such as a Flux or Redux-like pattern, to manage the state, side effects, and user intents in a software application.\\n\\n`State`: An interface that represents the current state of the application.\\n`SideEffect`: An interface that represents side effects, such as network requests or other asynchronous operations, that can be triggered by user actions or state changes.\\n`Intent`: An interface that represents user actions or intents that can trigger state changes or side effects.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/Constants.kt\&quot;:\&quot;This file does not contain any classes or functions. It only defines a single object called `Constants` which contains a single constant `TMDb_IMAGE_BASE_URL` that holds the base URL for fetching images from The Movie Database (TMDb) API.\\n\\nThe purpose of this file is to centralize and manage commonly used constants or configuration values across the application, making it easier to maintain and update them in a single location.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/MainActivity.kt\&quot;:\&quot;This file is the main entry point for the VidBinge Android application, which is built using Jetpack Compose. It sets up the navigation graph and defines the main screens of the application.\\n\\n`MainActivity`: The main activity of the application, which sets up the Jetpack Compose UI and enables edge-to-edge mode.\\n\\n`HomeDestination`: A serializable object representing the home destination in the navigation graph.\\n\\n`MovieDetailsDestination`: A serializable data class representing the movie details destination in the navigation graph, which includes the movie ID.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/ui/components/PillBar.kt\&quot;:\&quot;This file contains the following classes and functions:\\n\\n`PillBarTheme`: A data class that defines the theme for the `PillBar` component.\\n\\n`Pill`: A composable function that renders a single pill with the specified theme and selection state.\\n\\n`PillBar`: A composable function that renders a lazy row of pills with the specified choices, selected pill, and theme.\\n\\nThis file provides a reusable `PillBar` component that displays a row of selectable pills with customizable appearance and behavior.\&quot;,\&quot;/app/test.kt\&quot;:\&quot;There are no classes or functions in the provided file. The file appears to be an empty XML document, which is a markup language used to structure and organize data. Without any content, the file does not perform any specific functionality.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/details/data/dto/MovieDetailsDTO.kt\&quot;:\&quot;This file contains two data classes:\\n\\n`MovieDetailsDTO`: A data class that represents the details of a movie, including its title, release date, genres, budget, revenue, and other relevant information.\\n\\n`GenreDTO`: A data class that represents a single genre associated with a movie, including its ID and name.\\n\\nThis file does not contain any functions. It serves as a data transfer object (DTO) for the movie details, which can be used to transfer data between different layers of the application, such as the network layer and the presentation layer.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/home/ui/screens/HomeScreen.kt\&quot;:\&quot;This file contains the implementation of the `HomeScreen` composable function, which is responsible for rendering the home screen of the VidBinge app. It includes several other composable functions that are used to display various sections of the home screen, such as the movie and TV show carousels, portrait card lists, and the top app bar.\\n\\n`HomeScreen`: Renders the home screen of the VidBinge app, including the top app bar, error screen, and content.\\n\\n`HomeScreenContent`: Displays the main content of the home screen, including the pill bar, movie and TV show sections.\\n\\n`MoviePortraitCardList`: Displays a list of movie portrait cards.\\n\\n`TVPortraitCardList`: Displays a list of TV show portrait cards.\\n\\n`TopAppBar`: Displays the top app bar with the user\\u0027s name and notification count.\\n\\n`NowPlayingMovies`: Displays a carousel of movies that are currently playing in theaters.\\n\\n`NowPlayingTv`: Displays a carousel of TV shows that are currently airing.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/data/coil/TMDbImageSize.kt\&quot;:\&quot;This file defines an enum class `TMDbImageSize` that represents different image sizes used by the TMDb (The Movie Database) API. Each enum value corresponds to a specific image size string that can be used to construct image URLs.\\n\\n`TMDbImageSize`: An enum class that represents different image sizes used by the TMDb API.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/Genre.kt\&quot;:\&quot;This file defines a data class `Genre` that represents a genre of a video. It also includes a companion object that provides a list of mock `Genre` instances.\\n\\n`Genre`: A data class that represents a video genre with an ID and a genre name.\\n\\n`mockList`: A list of mock `Genre` instances that can be used for testing or demonstration purposes.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/home/ui/components/MovieCarousel.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`MovieCarousel`: A Composable function that displays a carousel of movie posters, with a title and overview for the currently centered movie. The carousel automatically scrolls to the next movie after a 5-second delay.\\n\\nThe file also imports various Compose components and utilities to implement the `MovieCarousel` functionality.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/home/ui/components/TVCarousel.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`TVCarousel`: A composable function that displays a carousel of TV shows, with a centered item that automatically scrolls to the next item after a 5-second delay.\\n\\nThe file also includes several helper functions and variables used within the `TVCarousel` composable:\\n\\n`rememberSnapFlingBehavior`: A function that remembers a snap fling behavior for a lazy list.\\n`derivedStateOf`: A function that derives a state value from other state values.\\n`rememberCoroutineScope`: A function that remembers a coroutine scope.\\n`LaunchedEffect`: A composable that launches a coroutine when the composable is first composed.\\n\\nOverall, this file provides a reusable UI component for displaying a carousel of TV shows with automatic scrolling and centered item highlighting.\&quot;,\&quot;/app/src/androidTest/java/com/example/vidbinge/ExampleInstrumentedTest.kt\&quot;:\&quot;This file contains an instrumented test for an Android app called \\\&quot;VidBinge\\\&quot;. It does not contain any classes or functions, but rather a single test case that checks if the app\\u0027s package name matches the expected value.\\n\\n`ExampleInstrumentedTest`: This is an instrumented test class that runs on an Android device and tests the app\\u0027s context.\\n\\n`useAppContext()`: This test function checks if the app\\u0027s package name matches the expected value, which is \\\&quot;com.example.vidbinge\\\&quot;.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/home/ui/effects/HomeScreenEffect.kt\&quot;:\&quot;This file defines a sealed class `HomeScreenEffect` that extends the `SideEffect` interface. The `HomeScreenEffect` class represents different side effects that can occur on the home screen of the `Vidbinge` application.\\n\\n`HomeScreenEffect`: A sealed class that represents different side effects that can occur on the home screen of the `Vidbinge` application.\\n\\n`ShowToast`: A data class that represents a side effect of showing a toast message on the home screen.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/details/ui/intents/MovieDetailsScreenIntent.kt\&quot;:\&quot;This file defines a sealed class `MovieDetailsScreenIntent` which is a part of the `com.example.vidbinge.details.ui.intents` package. The file does not contain any functions, but rather defines a single data object `LoadMovieDetails` which is a subclass of `MovieDetailsScreenIntent`.\\n\\n`MovieDetailsScreenIntent`: A sealed class that represents the different intents for the movie details screen in the VidBinge application.\\n\\n`LoadMovieDetails`: A data object that represents the intent to load the movie details.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/Theme.kt\&quot;:\&quot;This file defines the theme and color scheme for the \\\&quot;VidBinge\\\&quot; Android app using Jetpack Compose.\\n\\n`ColorFamily`: A data class that represents a color family with a color, on-color, color container, and on-color container.\\n\\n`unspecified_scheme`: A `ColorFamily` instance with unspecified colors.\\n\\n`AppTheme`: A composable function that sets up the app\\u0027s theme based on the system\\u0027s dark mode setting and the availability of dynamic colors on Android 12+.\\n\\nThe file also defines several color schemes, including light, dark, medium contrast light, high contrast light, medium contrast dark, and high contrast dark, which are used to customize the app\\u0027s appearance.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/ext/ListExtensions.kt\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`takeAtMost`: This function takes a list and an integer `n`, and returns a new list that contains at most `n` elements from the original list.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/network/RetrofitClient.kt\&quot;:\&quot;This file contains a single abstract class and several functions:\\n\\n`RetrofitClient\\u003cT\\u003e`: An abstract class that provides a base implementation for creating Retrofit clients with common functionality, such as creating an OkHttpClient with logging and header interceptors.\\n\\n`createHttpClient()`: A function that creates an OkHttpClient instance with a logging interceptor and a header interceptor.\\n\\n`doRequest()`: A function that takes a suspend function that makes a Retrofit request and a mapping function to transform the response, and returns a Flow that emits the transformed response data or an error.\\n\\nThis file provides a reusable base implementation for creating Retrofit clients with common functionality, such as logging and header management, and a helper function for making Retrofit requests and handling the response in a reactive way using Kotlin Coroutines and Flows.\&quot;,\&quot;/app/src/test/java/com/example/vidbinge/ExampleUnitTest.kt\&quot;:\&quot;This file contains a single unit test class with one test function. The file does not define any classes or functions, but rather contains a single unit test that checks if the addition operation `2 + 2` is correct.\\n\\n`ExampleUnitTest`: A unit test class that contains a single test function to verify the correctness of a simple addition operation.\\n\\n`addition_isCorrect()`: A test function that checks if the addition operation `2 + 2` returns the expected result of `4`.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/tvshow/TvShow.kt\&quot;:\&quot;This file defines a data class `TvShow` that represents a TV show and provides utility functions to generate the full URL for the TV show\\u0027s backdrop and poster images.\\n\\n`TvShow`: A data class that represents a TV show, containing various properties such as ID, overview, name, and image paths.\\n\\n`backdropFullUrl`: A function that generates the full URL for the TV show\\u0027s backdrop image based on the provided `TMDbImageSize`.\\n\\n`posterFullPath`: A function that generates the full URL for the TV show\\u0027s poster image based on the provided `TMDbImageSize`.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/home/ui/intents/HomeScreenIntent.kt\&quot;:\&quot;This file defines the `HomeScreenIntent` sealed class, which represents the different intents that can be triggered on the home screen of the `Vidbinge` application.\\n\\n`HomeScreenIntent`: A sealed class that represents the different intents that can be triggered on the home screen of the `Vidbinge` application.\\n\\n`LoadAllData`: An object that represents the intent to load all the data required for the home screen.\\n\\n`SwitchPill`: A data class that represents the intent to switch the currently displayed pill on the home screen.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/old/Type.kt\&quot;:\&quot;This file defines the typography styles for the Vidbinge app using Jetpack Compose. It sets the default text style for the body large text, and provides commented-out examples for other text styles such as title large and label small.\\n\\n`Typography`: Defines a set of Material typography styles to be used in the Vidbinge app.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/domain/mapper/TvMapper.kt\&quot;:\&quot;This file contains a single class and two functions:\\n\\n`TvMapper`: A class that maps between a `TvShow` model and a `TVDto` data transfer object.\\n\\n`mapToDTo`: A function that maps a `TvShow` model to a `TVDto` object, but is not yet implemented.\\n\\n`mapToModel`: A function that maps a `TVDto` object to a `TvShow` model, creating a new `TvShow` instance with the data from the `TVDto`.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/network/service/TVService.kt\&quot;:\&quot;This file defines an interface called `TVService` that provides methods to fetch TV show data from a remote API.\\n\\n`TVService`: An interface that defines methods to fetch TV show data from a remote API.\\n\\n`getAiringTodayShows()`: A function that retrieves a list of TV shows that are currently airing today.\\n\\n`getPopularShows()`: A function that retrieves a list of the most popular TV shows.\\n\\n`getTopRatedShows()`: A function that retrieves a list of the top-rated TV shows.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/details/data/dto/CastDTO.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`CastDTO`: A data class that represents the cast information for a video, including the cast member\\u0027s ID, name, profile picture, and the character they played.\\n\\nThis file does not contain any functions. It is a data transfer object (DTO) that is used to represent the cast information for a video in the application.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/ui/components/ErrorScreen.kt\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`ErrorScreen`: A Composable function that displays an error screen with a warning icon and a centered error message.\\n\\nThe file provides a reusable UI component for displaying an error screen in a Jetpack Compose-based Android application.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/movie/MovieDetails.kt\&quot;:\&quot;This file contains a single data class `MovieDetails` that represents the details of a movie, along with several functions that provide utility methods for working with the movie data.\\n\\n`MovieDetails`: A data class that represents the details of a movie, including its genres, runtime, ID, adult rating, backdrop and poster paths, original language and title, overview, popularity, release date, title, vote average, and vote count.\\n\\n`backdropFullUrl`: Returns the full URL for the movie\\u0027s backdrop image, given a specific image size.\\n\\n`posterFullPath`: Returns the full URL for the movie\\u0027s poster image, given a specific image size.\\n\\n`runtimeAsString`: Returns the movie\\u0027s runtime as a formatted string, displaying the hours and minutes.\\n\\n`releaseYear`: Returns the release year of the movie as a string.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/ui/BaseViewModel.kt\&quot;:\&quot;`BaseViewModel`: An abstract class that extends `SimpleBaseViewModel` and provides a `SharedFlow` for handling side effects.\\n\\n`SimpleBaseViewModel`: An abstract class that extends `ViewModel` and provides a `StateFlow` for managing the screen state.\\n\\n`initialState()`: An abstract function that returns the initial state of the screen.\\n\\n`handleIntent(intent: INTENT)`: An abstract function that handles the user\\u0027s intent and updates the screen state accordingly.\\n\\n`updateState(reducer: (STATE) -\\u003e STATE)`: A protected function that updates the screen state using the provided reducer function.\\n\\n`sendEffect(effect: SIDE_EFFECT)`: A protected function that emits a side effect through the `screenEffects` `SharedFlow`.\\n\\nThis file defines two abstract base classes, `BaseViewModel` and `SimpleBaseViewModel`, that provide a common structure for implementing view models in an Android application. The `BaseViewModel` class adds support for handling side effects, while the `SimpleBaseViewModel` class focuses on managing the screen state.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/details/ui/screens/MovieDetailsScreen.kt\&quot;:\&quot;This file contains the implementation of the `MovieDetailsScreen` and related components in a Compose-based Android application. It handles the display of movie details, including the movie\\u0027s title, release year, runtime, genres, overview, cast, and various user interaction features such as adding the movie to a watchlist and sharing the movie. The file also includes utility functions for rendering UI elements like chips, buttons, and cast items.\\n\\n`MovieDetailsScreen`: Composable function that displays the movie details screen, handling loading, error, and success states.\\n\\n`MovieDetailsContent`: Composable function that lays out the main components of the movie details screen.\\n\\n`MovieDetailsBlock`: Composable function that displays the movie details, including the title, year, runtime, genres, overview, and buttons.\\n\\n`GenresFlowChips`: Composable function that displays a flow of genre chips.\\n\\n`BackButton`: Composable function that displays a back button.\\n\\n`Cast`: Composable function that displays the movie\\u0027s cast.\\n\\n`CastItem`: Composable function that displays a single cast member.\\n\\n`SquareButton`: Composable function that displays a square button with an icon and text.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/details/data/dto/MovieCreditsDTO.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`MovieCreditsDTO`: A data class that represents the movie credits, including the movie ID and a list of cast members.\\n\\nThis file does not contain any functions. It serves as a data transfer object (DTO) for the movie credits information, which can be used in the application\\u0027s data layer.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/domain/mapper/MovieMapper.kt\&quot;:\&quot;`MovieMapper`: A class that maps between `Movie` data model and `MovieDto` data transfer object.\\n\\n`mapToDTo`: A function that maps a `Movie` model to a `MovieDto` object.\\n\\n`mapToModel`: A function that maps a `MovieDto` object to a `Movie` model.\\n\\nThis file contains a `MovieMapper` class that implements the `Mapper` interface. The `mapToModel` function maps a `MovieDto` object to a `Movie` model, while the `mapToDTo` function is not yet implemented.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/network/HeadersInterceptor.kt\&quot;:\&quot;This file contains a single class:\\n\\n`HeadersInterceptor`: This class is an `Interceptor` implementation that adds various headers to the HTTP request, including content type, operating system, OS version, and authorization token.\\n\\nThe file does not contain any functions, but the `intercept` method of the `HeadersInterceptor` class is responsible for adding the headers to the request before it is sent.\\n\\nOverall, this file is responsible for setting up the necessary headers for HTTP requests made by the application, ensuring that the server can properly identify the client and its context.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/old/Theme.kt\&quot;:\&quot;This file defines the theme for the VidBinge app, including the color scheme and typography.\\n\\n`DarkColorScheme`: A private color scheme for the dark theme of the app.\\n\\n`LightColorScheme`: A private color scheme for the light theme of the app.\\n\\n`VidBingeTheme`: A composable function that sets the app\\u0027s theme using the provided color scheme and typography.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/VidBingeApplication.kt\&quot;:\&quot;This file contains a single class:\\n\\n`VidBingeApplication`: This class is an extension of the `Application` class and is annotated with `@HiltAndroidApp`, which enables Dagger Hilt for dependency injection in the Android application.\\n\\nThis file does not contain any functions. The purpose of this file is to define the main application class for the \\\&quot;VidBinge\\\&quot; Android application, which serves as the entry point for the application and enables the use of Dagger Hilt for dependency injection throughout the application.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/movie/Movie.kt\&quot;:\&quot;This file defines a `Movie` data class that represents a movie and its associated metadata. It also includes several mock instances of the `Movie` class for testing purposes.\\n\\n`Movie`: A data class that represents a movie and its associated metadata, such as its ID, title, release date, and more.\\n\\n`backdropFullUrl`: A function that generates the full URL for the movie\\u0027s backdrop image based on the provided `TMDbImageSize`.\\n\\n`posterFullPath`: A function that generates the full URL for the movie\\u0027s poster image based on the provided `TMDbImageSize`.\\n\\n`releaseYear`: A computed property that extracts the release year from the `releaseDate` field.\\n\\n`mock1`, `mock2`, `mock3`, `mock4`, `mockList`: Mock instances of the `Movie` class for testing purposes.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/ui/navtypes/MovieType.kt\&quot;:\&quot;This file defines a custom `NavType` for the `Movie` class, which allows it to be used as a parameter in Android Navigation.\\n\\n`MovieType`: A custom `NavType` implementation for the `Movie` class, which allows it to be passed as a parameter in Android Navigation.\\n\\n`get`: Retrieves a `Movie` object from a `Bundle`, handling the differences between Android API versions.\\n`parseValue`: Deserializes a `String` representation of a `Movie` object.\\n`serializeAsValue`: Serializes a `Movie` object to a `String` representation.\\n`put`: Stores a `Movie` object in a `Bundle`.\&quot;,\&quot;/app/build.gradle.kts\&quot;:\&quot;This file is a Gradle build script for an Android application called \\\&quot;VidBinge\\\&quot;. It sets up the project configuration, dependencies, and build settings for the application. There are no explicit classes or functions defined in this file. Instead, it configures the project\\u0027s build settings, including the Android application plugin, Kotlin support, Dagger Hilt, and various Android and Jetpack Compose dependencies.\\n\\nThe key aspects of this build script are:\\n\\n1. Applying the necessary plugins for Android application development, Kotlin, and Jetpack Compose.\\n2. Configuring the Android application settings, such as the namespace, compile SDK version, minimum SDK version, and version information.\\n3. Setting up the build types, including the release configuration.\\n4. Configuring the Java and Kotlin compiler options to use Java 11.\\n5. Enabling Jetpack Compose support for the application.\\n6. Declaring the various dependencies required for the application, including Jetpack Compose, Dagger Hilt, Retrofit, Coil, and navigation components.\\n7. Configuring the Kotlin serialization plugin and setting up the Hilt annotation processor.\\n\\nOverall, this build script sets up the foundation for the Android application development project, ensuring the necessary dependencies and configurations are in place.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/network/dtos/MovieDto.kt\&quot;:\&quot;This file contains a single data class, `MovieDto`, which is used to represent a movie in the application\\u0027s data model.\\n\\n`MovieDto`: A data class that represents a movie, containing various properties such as the movie\\u0027s ID, title, release date, and other metadata.\\n\\nThis file does not contain any functions. It is a simple data class that serves as a data transfer object (DTO) for movie-related data in the application\\u0027s network communication.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/ext/DrawableExtensions.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`getDominantColor()`: This function takes a `Drawable` object, converts it to a `Bitmap`, and then uses the `Palette` API to extract the dominant color from the image, returning it as a `Color` object.\\n\\nThe file appears to be a Kotlin extension function that provides a convenient way to extract the dominant color from a `Drawable` object, which can be useful in various Android development scenarios, such as setting the background color of a UI element based on the dominant color of an image.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/old/Color.kt\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines a set of color constants that can be used in a Compose-based UI. The colors defined include various shades of purple, gray, and pink, as well as some additional colors like Wenge, Snow, Lavender, LightGray, Pink, and DarkPurple. These colors can be used to create a consistent and visually appealing user interface for the \\\&quot;VidBinge\\\&quot; application.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/ext/ColorExtensions.kt\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`relativeLuma`: This function calculates the relative luminance of a given `Color` and returns a `RelativeLuma` enum value indicating whether the color is \\\&quot;BRIGHT\\\&quot; or \\\&quot;DARK\\\&quot;.\\n\\nThe file appears to be an extension function that adds a `relativeLuma` property to the `Color` class, which can be used to determine the relative brightness of a color.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/ui/components/SearchBar.kt\&quot;:\&quot;This file appears to be a Kotlin file that contains Compose UI components for the \\\&quot;Vidbinge\\\&quot; application. It does not contain any classes or functions, but rather serves as a container for Composable functions that define the UI elements of the application.\\n\\nThe file likely provides reusable Composable functions that can be used throughout the application to create a consistent and cohesive user interface.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/RelativeLuma.kt\&quot;:\&quot;This file defines an `enum` class called `RelativeLuma` which represents the relative luminance or brightness of an object or image. The `enum` has two possible values: `BRIGHT` and `DARK`.\\n\\n`RelativeLuma`: An enum class that represents the relative luminance or brightness of an object or image, with two possible values: `BRIGHT` and `DARK`.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/network/service/MovieService.kt\&quot;:\&quot;This file defines an interface called `MovieService` that provides methods for fetching movie-related data from a remote API.\\n\\n`MovieService`: An interface that defines methods for fetching movie data, including now playing, popular, top-rated, and upcoming movies, as well as movie details and credits.\\n\\n`getNowPlayingMovies()`: Fetches a list of movies that are currently playing in theaters.\\n`getPopularMovies()`: Fetches a list of the most popular movies.\\n`getTopRatedMovies()`: Fetches a list of the top-rated movies.\\n`getUpcomingMovies()`: Fetches a list of upcoming movies.\\n`getMovieDetails()`: Fetches detailed information about a specific movie.\\n`getMovieCredits()`: Fetches the cast and crew information for a specific movie.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/home/ui/components/MoviePortraitCard.kt\&quot;:\&quot;This file contains Composable functions for a movie portrait card UI component in a Jetpack Compose application.\\n\\n`RatingPill`: A composable function that displays a rating pill with a star icon and the rating value.\\n\\n`TitleBackDrop`: A composable function that displays a title backdrop with the movie title.\\n\\n`MoviePortraitCard`: A composable function that combines the `RatingPill` and `TitleBackDrop` components to create a movie portrait card UI element, including an `AsyncImage` for the movie poster.\\n\\n`MoviePortraitCardPreview`: A composable function that provides a preview of the `MoviePortraitCard` component.\&quot;,\&quot;/build.gradle.kts\&quot;:\&quot;This file is a top-level build file that sets up common configuration options for all sub-projects or modules in the Android application. It does not contain any classes or functions, but instead, it applies various plugins to the project, including:\\n\\n`alias(libs.plugins.android.application) apply false`: Applies the Android application plugin to the project.\\n`alias(libs.plugins.kotlin.android) apply false`: Applies the Kotlin Android plugin to the project.\\n`alias(libs.plugins.kotlin.compose) apply false`: Applies the Kotlin Compose plugin to the project.\\n`id(\\\&quot;com.google.dagger.hilt.android\\\&quot;) version \\\&quot;2.51.1\\\&quot; apply false`: Applies the Dagger Hilt Android plugin to the project.\\n`alias(libs.plugins.android.library) apply false`: Applies the Android library plugin to the project.\\n\\nThe purpose of this file is to centralize the configuration of common plugins and dependencies across all sub-projects or modules in the Android application, making it easier to manage and maintain the project\\u0027s build setup.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/Type.kt\&quot;:\&quot;This file defines the typography settings for the app\\u0027s user interface using the Jetpack Compose framework. It does not contain any classes or functions, but rather defines a `Typography` object named `AppTypography` that can be used throughout the app\\u0027s UI.\\n\\nThe file does the following:\\n\\n1. Imports the necessary classes and functions from the Jetpack Compose Material3 library.\\n2. Defines the `AppTypography` object, which is an instance of the `Typography` class, with default text styles for the app.\&quot;,\&quot;/app/src/main/java/com/example/vidbinge/common/domain/mapper/MovieDetailsMapper.kt\&quot;:\&quot;This file contains a single class and two functions:\\n\\n`MovieDetailsMapper`: A class that maps between a `MovieDetails` model and a `MovieDetailsDTO` data transfer object.\\n\\n`mapToDTo`: A function that maps a `MovieDetails` model to a `MovieDetailsDTO` object, but is not yet implemented.\\n\\n`mapToModel`: A function that maps a `MovieDetailsDTO` object to a `MovieDetails` model, creating the model with the data from the DTO.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;D:/Work/Programming/VidBinge&quot;:&quot;{\&quot;/app/src/androidTest/java/com/example/vidbinge/ExampleInstrumentedTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/androidTest/java/com/example/vidbinge/ExampleInstrumentedTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleInstrumentedTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/data/coil/TMDbImageSize.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/data/coil/TMDbImageSize.kt\&quot;,\&quot;file_name\&quot;:\&quot;TMDbImageSize.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/movie/Movie.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/movie/Movie.kt\&quot;,\&quot;file_name\&quot;:\&quot;Movie.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/movie/MovieDetails.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/movie/MovieDetails.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieDetails.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/tvshow/TvShow.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/tvshow/TvShow.kt\&quot;,\&quot;file_name\&quot;:\&quot;TvShow.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/Genre.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/Genre.kt\&quot;,\&quot;file_name\&quot;:\&quot;Genre.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/PillChoices.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/PillChoices.kt\&quot;,\&quot;file_name\&quot;:\&quot;PillChoices.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/RelativeLuma.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/data/models/RelativeLuma.kt\&quot;,\&quot;file_name\&quot;:\&quot;RelativeLuma.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/data/repo/MovieRepository.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/data/repo/MovieRepository.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieRepository.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/data/repo/TVRepository.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/data/repo/TVRepository.kt\&quot;,\&quot;file_name\&quot;:\&quot;TVRepository.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/domain/mapper/Mapper.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/domain/mapper/Mapper.kt\&quot;,\&quot;file_name\&quot;:\&quot;Mapper.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/domain/mapper/MovieDetailsMapper.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/domain/mapper/MovieDetailsMapper.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieDetailsMapper.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/domain/mapper/MovieMapper.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/domain/mapper/MovieMapper.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieMapper.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/domain/mapper/TvMapper.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/domain/mapper/TvMapper.kt\&quot;,\&quot;file_name\&quot;:\&quot;TvMapper.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/exceptions/NoInternetException.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/exceptions/NoInternetException.kt\&quot;,\&quot;file_name\&quot;:\&quot;NoInternetException.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/ext/ColorExtensions.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/ext/ColorExtensions.kt\&quot;,\&quot;file_name\&quot;:\&quot;ColorExtensions.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/ext/DrawableExtensions.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/ext/DrawableExtensions.kt\&quot;,\&quot;file_name\&quot;:\&quot;DrawableExtensions.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/ext/ListExtensions.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/ext/ListExtensions.kt\&quot;,\&quot;file_name\&quot;:\&quot;ListExtensions.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/ext/ModifierExtensions.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/ext/ModifierExtensions.kt\&quot;,\&quot;file_name\&quot;:\&quot;ModifierExtensions.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/network/client/MovieRetrofitClient.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/network/client/MovieRetrofitClient.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieRetrofitClient.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/network/client/TVRetrofitClient.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/network/client/TVRetrofitClient.kt\&quot;,\&quot;file_name\&quot;:\&quot;TVRetrofitClient.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/network/connectivity/ConnectivityObserver.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/network/connectivity/ConnectivityObserver.kt\&quot;,\&quot;file_name\&quot;:\&quot;ConnectivityObserver.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/network/connectivity/NetworkConnectivityObserver.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/network/connectivity/NetworkConnectivityObserver.kt\&quot;,\&quot;file_name\&quot;:\&quot;NetworkConnectivityObserver.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/network/dtos/ListResponse.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/network/dtos/ListResponse.kt\&quot;,\&quot;file_name\&quot;:\&quot;ListResponse.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/network/dtos/MovieDto.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/network/dtos/MovieDto.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieDto.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/network/dtos/TVDto.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/network/dtos/TVDto.kt\&quot;,\&quot;file_name\&quot;:\&quot;TVDto.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/network/service/MovieService.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/network/service/MovieService.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieService.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/network/service/TVService.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/network/service/TVService.kt\&quot;,\&quot;file_name\&quot;:\&quot;TVService.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/network/HeadersInterceptor.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/network/HeadersInterceptor.kt\&quot;,\&quot;file_name\&quot;:\&quot;HeadersInterceptor.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/network/NetworkConnectivityInterceptor.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/network/NetworkConnectivityInterceptor.kt\&quot;,\&quot;file_name\&quot;:\&quot;NetworkConnectivityInterceptor.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/network/RetrofitClient.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/network/RetrofitClient.kt\&quot;,\&quot;file_name\&quot;:\&quot;RetrofitClient.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/ui/components/ErrorScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/ui/components/ErrorScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;ErrorScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/ui/components/LoadingObject.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/ui/components/LoadingObject.kt\&quot;,\&quot;file_name\&quot;:\&quot;LoadingObject.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/ui/components/PillBar.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/ui/components/PillBar.kt\&quot;,\&quot;file_name\&quot;:\&quot;PillBar.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/ui/components/SearchBar.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/ui/components/SearchBar.kt\&quot;,\&quot;file_name\&quot;:\&quot;SearchBar.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/ui/navtypes/MovieType.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/ui/navtypes/MovieType.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieType.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/ui/BaseMvi.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/ui/BaseMvi.kt\&quot;,\&quot;file_name\&quot;:\&quot;BaseMvi.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/ui/BaseViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/ui/BaseViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;BaseViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/Constants.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/Constants.kt\&quot;,\&quot;file_name\&quot;:\&quot;Constants.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/common/Secrets.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/common/Secrets.kt\&quot;,\&quot;file_name\&quot;:\&quot;Secrets.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/details/data/dto/CastDTO.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/details/data/dto/CastDTO.kt\&quot;,\&quot;file_name\&quot;:\&quot;CastDTO.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/details/data/dto/MovieCreditsDTO.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/details/data/dto/MovieCreditsDTO.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieCreditsDTO.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/details/data/dto/MovieDetailsDTO.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/details/data/dto/MovieDetailsDTO.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieDetailsDTO.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/details/data/model/Cast.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/details/data/model/Cast.kt\&quot;,\&quot;file_name\&quot;:\&quot;Cast.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/details/domain/mapper/CastMapper.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/details/domain/mapper/CastMapper.kt\&quot;,\&quot;file_name\&quot;:\&quot;CastMapper.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/details/ui/intents/MovieDetailsScreenIntent.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/details/ui/intents/MovieDetailsScreenIntent.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieDetailsScreenIntent.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/details/ui/screens/MovieDetailsScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/details/ui/screens/MovieDetailsScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieDetailsScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/details/ui/states/MovieDetailsScreenState.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/details/ui/states/MovieDetailsScreenState.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieDetailsScreenState.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/details/ui/viewmodels/MovieDetailsViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/details/ui/viewmodels/MovieDetailsViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieDetailsViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/home/ui/components/MovieCarousel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/home/ui/components/MovieCarousel.kt\&quot;,\&quot;file_name\&quot;:\&quot;MovieCarousel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/home/ui/components/MoviePortraitCard.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/home/ui/components/MoviePortraitCard.kt\&quot;,\&quot;file_name\&quot;:\&quot;MoviePortraitCard.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/home/ui/components/TVCarousel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/home/ui/components/TVCarousel.kt\&quot;,\&quot;file_name\&quot;:\&quot;TVCarousel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/home/ui/components/TVPortraitCard.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/home/ui/components/TVPortraitCard.kt\&quot;,\&quot;file_name\&quot;:\&quot;TVPortraitCard.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/home/ui/effects/HomeScreenEffect.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/home/ui/effects/HomeScreenEffect.kt\&quot;,\&quot;file_name\&quot;:\&quot;HomeScreenEffect.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/home/ui/intents/HomeScreenIntent.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/home/ui/intents/HomeScreenIntent.kt\&quot;,\&quot;file_name\&quot;:\&quot;HomeScreenIntent.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/home/ui/screens/HomeScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/home/ui/screens/HomeScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;HomeScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/home/ui/states/HomeScreenState.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/home/ui/states/HomeScreenState.kt\&quot;,\&quot;file_name\&quot;:\&quot;HomeScreenState.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/home/ui/viewmodels/HomeScreenViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/home/ui/viewmodels/HomeScreenViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;HomeScreenViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/old/Color.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/old/Color.kt\&quot;,\&quot;file_name\&quot;:\&quot;Color.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/old/Theme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/old/Theme.kt\&quot;,\&quot;file_name\&quot;:\&quot;Theme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/old/Type.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/old/Type.kt\&quot;,\&quot;file_name\&quot;:\&quot;Type.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/Color.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/Color.kt\&quot;,\&quot;file_name\&quot;:\&quot;Color.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/Theme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/Theme.kt\&quot;,\&quot;file_name\&quot;:\&quot;Theme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/Type.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/ui/theme/Type.kt\&quot;,\&quot;file_name\&quot;:\&quot;Type.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/MainActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/MainActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/vidbinge/VidBingeApplication.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/vidbinge/VidBingeApplication.kt\&quot;,\&quot;file_name\&quot;:\&quot;VidBingeApplication.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/test/java/com/example/vidbinge/ExampleUnitTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/test/java/com/example/vidbinge/ExampleUnitTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleUnitTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/test.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/test.kt\&quot;,\&quot;file_name\&quot;:\&quot;test.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/settings.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;settings.gradle.kts\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>